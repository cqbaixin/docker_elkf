input {
    beats {
        port => 5044
    }
}

## Add your filters / logstash plugins configuration here
filter {

    # nginx_access_log
    if [fields][log_source] == "nginx_access_log" {
        grok {
            match => {
                "message" => '%{IPORHOST:remote_addr} - (%{USERNAME:user}|-) \[%{HTTPDATE:log_timestamp}\] "(?:%{WORD:method} %{NOTSPACE:request_uri}(?: HTTP/%{NUMBER:http_version})?|%{DATA:raw_request})" %{NUMBER:status} %{NUMBER:raw_length} \"(%{GREEDYDATA:http_referer}|-)\" \"(%{GREEDYDATA:user_agent}|-)\" \"(%{GREEDYDATA:http_x_forwarded_for}|-)\"'
            }
            remove_field  => "message"
        }
        mutate {
            convert => ["upstream_response_time", "float"]
            convert => ["request_time", "float"]
            convert => ["http_version", "float"]
            convert => ["status", "integer"]
        }
    }

    # nginx_error_log
    if [fields][log_source] == "nginx_error_log" {
        grok {
            match => [
                "message", '%{TIMESTAMP_ISO8601:timestamp} \[%{DATA:log_level}\] %{NUMBER:pid:int}#%{NUMBER}: %{DATA:error_message}, client: %{IP:client_ip}, server: %{HOSTNAME:request_server}, request: \"%{WORD:request_method} %{URIPATHPARAM:request_uri} HTTP/%{BASE10NUM:http_version}\", upstream: \"%{URI:upstream}\", host: \"%{HOSTNAME:request_host}\", referrer: \"%{URI:request_referrer}\"',
                "message", '(?<timestamp>%{YEAR}/%{MONTHNUM}/%{MONTHDAY}[T ]%{HOUR}:?%{MINUTE}(?::?%{SECOND})?%{ISO8601_TIMEZONE}?) \[%{DATA:log_level}\] %{NUMBER:pid:int}#%{NUMBER}: %{DATA:error_message}, client: %{IP:client_ip}, server: %{HOSTNAME:request_server}, request: \"%{WORD:request_method} %{URIPATHPARAM:request_uri} HTTP/%{BASE10NUM:http_version}\", upstream: \"%{URI:upstream}\", host: \"%{HOSTNAME:request_host}\", referrer: \"%{URI:request_referrer}\"',
                "message", "%{TIMESTAMP_ISO8601:timestamp} \[%{LOGLEVEL:log_level}\]\s{1,}%{GREEDYDATA:error_message}"
            ]
            remove_field  => "message"
        }
    }

    #硬件
    if [fields][document_type] == "vein" {
        grok {
            match => {
                    "message" => "%{TIMESTAMP_ISO8601:requestTime} %{DATA:deviceId} %{DATA:requestActionName} %{DATA:appId} %{NUMBER:consumeTime} %{DATA:veinModel} %{NUMBER:proofValid} %{NUMBER:veinScore} %{DATA:requestType} %{DATA:deviceName} %{DATA:requestId} %{DATA:userMobile} %{DATA:businessName} %{GREEDYDATA:requestData}  %{GREEDYDATA:responseData}"
            }
            remove_field  => ["@version","offset","source","tags","message","beat","input","log","meta","prospector"]
        }

    }

}

output {
    stdout {
        codec => rubydebug
    }
    if [fields][document_type] == "nginx" {
        elasticsearch {
            index => "%{[fields][log_source]}-%{+YYYY.MM.dd}"
            hosts => "elasticsearch:9200"
        }
    }

    if [fields][document_type] == "vein" {
       elasticsearch {
               hosts => [ "elasticsearch:9200" ]
               index => "device-logs-%{+YYYY.MM.dd}"
               document_type => "deviceLogs"
       }
    }
}